{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashut\\\\Documents\\\\GitHub\\\\Smart-Health-Mgmt\\\\Smart-Healthcare-Mgmt\\\\src\\\\components\\\\auth\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    loading,\n    initialized\n  } = useAuth();\n  const location = useLocation();\n\n  // Only show loading state if we're still initializing\n  if (loading && !initialized) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  // If we're done loading and there's no user, redirect to login\n  if (!loading && !user) {\n    return /*#__PURE__*/React.createElement(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location.pathname\n      },\n      replace: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    });\n  }\n\n  // If we have a user or we're still loading but initialized, render the children\n  return children;\n};\n_s(ProtectedRoute, \"Z5/y81RE2UaJCbGlmUgdIL25uKY=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","ProtectedRoute","children","_s","user","loading","initialized","location","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","pathname","replace","_c","$RefreshReg$"],"sources":["C:/Users/ashut/Documents/GitHub/Smart-Health-Mgmt/Smart-Healthcare-Mgmt/src/components/auth/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { user, loading, initialized } = useAuth();\r\n  const location = useLocation();\r\n\r\n  // Only show loading state if we're still initializing\r\n  if (loading && !initialized) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If we're done loading and there's no user, redirect to login\r\n  if (!loading && !user) {\r\n    return <Navigate to=\"/login\" state={{ from: location.pathname }} replace />;\r\n  }\r\n\r\n  // If we have a user or we're still loading but initialized, render the children\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,2BAA2B;AAEnD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAY,CAAC,GAAGN,OAAO,CAAC,CAAC;EAChD,MAAMO,QAAQ,GAAGR,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAIM,OAAO,IAAI,CAACC,WAAW,EAAE;IAC3B,oBACET,KAAA,CAAAW,aAAA;MAAKC,SAAS,EAAC,+CAA+C;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC5DlB,KAAA,CAAAW,aAAA;MAAKC,SAAS,EAAC,mEAAmE;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAM,CACrF,CAAC;EAEV;;EAEA;EACA,IAAI,CAACV,OAAO,IAAI,CAACD,IAAI,EAAE;IACrB,oBAAOP,KAAA,CAAAW,aAAA,CAACV,QAAQ;MAACkB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEX,QAAQ,CAACY;MAAS,CAAE;MAACC,OAAO;MAAAV,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC;EAC7E;;EAEA;EACA,OAAOb,QAAQ;AACjB,CAAC;AAACC,EAAA,CApBIF,cAAc;EAAA,QACqBD,OAAO,EAC7BD,WAAW;AAAA;AAAAsB,EAAA,GAFxBpB,cAAc;AAsBpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}