{"ast":null,"code":"import _objectSpread from \"C:/Users/ashut/Documents/GitHub/Smart-Health-Mgmt/Smart-Healthcare-Mgmt/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\ashut\\\\Documents\\\\GitHub\\\\Smart-Health-Mgmt\\\\Smart-Healthcare-Mgmt\\\\src\\\\components\\\\Prescriptions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Alert from './common/Alert';\nimport AddPrescriptionModal from './AddPrescriptionModal'; // Import the original modal\nimport PrescriptionList from './PrescriptionList'; // Ensure PrescriptionList is imported\n\nconst Prescriptions = () => {\n  _s();\n  const [prescriptions, setPrescriptions] = useState([\n  // Hardcoded data for demonstration. This one will be filtered out due to past date.\n  {\n    id: 1,\n    diagnosis: 'Epilepsy',\n    prescribedBy: 'Dr. Veena Kalra',\n    startDate: '2024-06-12T00:00:00.000Z',\n    // Past date\n    endDate: '2024-06-20T00:00:00.000Z',\n    // Changed to a past date for demonstration\n    pharmacy: 'BAS (9897756864)',\n    status: 'active',\n    medications: [],\n    notes: ''\n  }]);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n  // Function to filter out expired prescriptions\n  const filterExpiredPrescriptions = () => {\n    const now = new Date();\n    setPrescriptions(prevPrescriptions => prevPrescriptions.filter(prescription => {\n      const endDate = new Date(prescription.endDate);\n      return endDate >= now;\n    }));\n  };\n\n  // Run filter on component mount and every 24 hours\n  useEffect(() => {\n    filterExpiredPrescriptions(); // Initial filter on mount\n\n    const interval = setInterval(() => {\n      filterExpiredPrescriptions();\n    }, 24 * 60 * 60 * 1000); // Check every 24 hours (for demonstration)\n\n    // Clear interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n  const handleAddPrescription = async newPrescriptionData => {\n    console.log('New prescription data received:', newPrescriptionData);\n    setPrescriptions(prev => {\n      const updatedPrescriptions = [...prev, _objectSpread(_objectSpread({}, newPrescriptionData), {}, {\n        id: Date.now(),\n        status: newPrescriptionData.status || 'active'\n      })];\n      console.log('Updated prescriptions state:', updatedPrescriptions);\n      return updatedPrescriptions;\n    });\n    setAlert({\n      type: 'success',\n      message: 'Prescription added successfully!'\n    });\n    setIsAddModalOpen(false);\n    setTimeout(() => setAlert(null), 3000);\n  };\n  const getStatusColor = status => {\n    switch (status.toLowerCase()) {\n      case 'active':\n        return 'bg-green-100 text-green-800';\n      case 'expired':\n        return 'bg-red-100 text-red-800';\n      case 'refill needed':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-3xl font-bold text-gray-900 mb-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Prescriptions\"), alert && /*#__PURE__*/React.createElement(Alert, {\n    type: alert.type,\n    message: alert.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"md:flex md:items-center md:justify-between mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-1 min-w-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2 flex items-center text-sm text-gray-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Manage your prescriptions and medications.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4 flex md:mt-0 md:ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsAddModalOpen(true),\n    className: \"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Add New Prescription\"))), /*#__PURE__*/React.createElement(PrescriptionList, {\n    prescriptions: prescriptions,\n    filter: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddPrescriptionModal, {\n    isOpen: isAddModalOpen,\n    onClose: () => setIsAddModalOpen(false),\n    onSubmit: handleAddPrescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }));\n};\n_s(Prescriptions, \"KfqbxZA1dhbAd9NkTcYlpX2Gjlk=\");\n_c = Prescriptions;\nexport default Prescriptions;\nvar _c;\n$RefreshReg$(_c, \"Prescriptions\");","map":{"version":3,"names":["React","useState","useEffect","Alert","AddPrescriptionModal","PrescriptionList","Prescriptions","_s","prescriptions","setPrescriptions","id","diagnosis","prescribedBy","startDate","endDate","pharmacy","status","medications","notes","isAddModalOpen","setIsAddModalOpen","alert","setAlert","filterExpiredPrescriptions","now","Date","prevPrescriptions","filter","prescription","interval","setInterval","clearInterval","handleAddPrescription","newPrescriptionData","console","log","prev","updatedPrescriptions","_objectSpread","type","message","setTimeout","getStatusColor","toLowerCase","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onClose","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/ashut/Documents/GitHub/Smart-Health-Mgmt/Smart-Healthcare-Mgmt/src/components/Prescriptions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Alert from './common/Alert';\nimport AddPrescriptionModal from './AddPrescriptionModal'; // Import the original modal\nimport PrescriptionList from './PrescriptionList'; // Ensure PrescriptionList is imported\n\nconst Prescriptions = () => {\n  const [prescriptions, setPrescriptions] = useState([\n    // Hardcoded data for demonstration. This one will be filtered out due to past date.\n    {\n      id: 1,\n      diagnosis: 'Epilepsy',\n      prescribedBy: 'Dr. Veena Kalra',\n      startDate: '2024-06-12T00:00:00.000Z', // Past date\n      endDate: '2024-06-20T00:00:00.000Z', // Changed to a past date for demonstration\n      pharmacy: 'BAS (9897756864)',\n      status: 'active',\n      medications: [],\n      notes: ''\n    }\n  ]);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n  // Function to filter out expired prescriptions\n  const filterExpiredPrescriptions = () => {\n    const now = new Date();\n    setPrescriptions(prevPrescriptions =>\n      prevPrescriptions.filter(prescription => {\n        const endDate = new Date(prescription.endDate);\n        return endDate >= now;\n      })\n    );\n  };\n\n  // Run filter on component mount and every 24 hours\n  useEffect(() => {\n    filterExpiredPrescriptions(); // Initial filter on mount\n\n    const interval = setInterval(() => {\n      filterExpiredPrescriptions();\n    }, 24 * 60 * 60 * 1000); // Check every 24 hours (for demonstration)\n\n    // Clear interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleAddPrescription = async (newPrescriptionData) => {\n    console.log('New prescription data received:', newPrescriptionData);\n    setPrescriptions(prev => {\n      const updatedPrescriptions = [...prev, { ...newPrescriptionData, id: Date.now(), status: newPrescriptionData.status || 'active' }];\n      console.log('Updated prescriptions state:', updatedPrescriptions);\n      return updatedPrescriptions;\n    });\n    setAlert({ type: 'success', message: 'Prescription added successfully!' });\n    setIsAddModalOpen(false);\n    setTimeout(() => setAlert(null), 3000);\n  };\n\n  const getStatusColor = (status) => {\n    switch (status.toLowerCase()) {\n      case 'active':\n        return 'bg-green-100 text-green-800';\n      case 'expired':\n        return 'bg-red-100 text-red-800';\n      case 'refill needed':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <h1 className=\"text-3xl font-bold text-gray-900 mb-8\">Prescriptions</h1>\n\n      {alert && <Alert type={alert.type} message={alert.message} />}\n\n      <div className=\"md:flex md:items-center md:justify-between mb-6\">\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-6\">\n            <div className=\"mt-2 flex items-center text-sm text-gray-500\">\n              Manage your prescriptions and medications.\n            </div>\n          </div>\n        </div>\n        <div className=\"mt-4 flex md:mt-0 md:ml-4\">\n          <button\n            onClick={() => setIsAddModalOpen(true)}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n          >\n            Add New Prescription\n          </button>\n        </div>\n      </div>\n\n      {/* Use PrescriptionList to display all filtered prescriptions */}\n      <PrescriptionList \n        prescriptions={prescriptions} \n        filter=\"all\" \n      />\n\n      {/* Original Add Prescription Modal */}\n      <AddPrescriptionModal\n        isOpen={isAddModalOpen}\n        onClose={() => setIsAddModalOpen(false)}\n        onSubmit={handleAddPrescription}\n      />\n    </div>\n  );\n};\n\nexport default Prescriptions; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}