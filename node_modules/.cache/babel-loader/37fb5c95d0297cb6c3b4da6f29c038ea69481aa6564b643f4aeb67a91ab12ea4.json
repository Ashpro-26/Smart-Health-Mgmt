{"ast":null,"code":"import _objectSpread from \"C:/Users/ashut/Documents/GitHub/Smart-Health-Mgmt/Smart-Healthcare-Mgmt/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\ashut\\\\Documents\\\\GitHub\\\\Smart-Health-Mgmt\\\\Smart-Healthcare-Mgmt\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport authService from '../services/authService';\nimport axios from 'axios';\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n  useEffect(() => {\n    let mounted = true;\n    const initAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token && mounted) {\n          // Set axios default header\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          try {\n            const userData = await authService.getCurrentUser();\n            if (userData && mounted) {\n              setUser(userData);\n            } else if (mounted) {\n              localStorage.removeItem('token');\n              delete axios.defaults.headers.common['Authorization'];\n            }\n          } catch (err) {\n            console.error('Failed to get current user:', err);\n            if (mounted) {\n              localStorage.removeItem('token');\n              delete axios.defaults.headers.common['Authorization'];\n            }\n          }\n        }\n      } catch (err) {\n        console.error('Auth initialization failed:', err);\n        if (mounted) {\n          localStorage.removeItem('token');\n          delete axios.defaults.headers.common['Authorization'];\n        }\n      } finally {\n        if (mounted) {\n          setLoading(false);\n          setInitialized(true);\n        }\n      }\n    };\n    initAuth();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  const validateCredentials = credentials => {\n    var _credentials$email, _credentials$password;\n    if (!(credentials !== null && credentials !== void 0 && (_credentials$email = credentials.email) !== null && _credentials$email !== void 0 && _credentials$email.trim())) {\n      throw new Error('Email is required');\n    }\n    if (!(credentials !== null && credentials !== void 0 && (_credentials$password = credentials.password) !== null && _credentials$password !== void 0 && _credentials$password.trim())) {\n      throw new Error('Password is required');\n    }\n    if (!/\\S+@\\S+\\.\\S+/.test(credentials.email.trim())) {\n      throw new Error('Please enter a valid email address');\n    }\n    if (credentials.password.length < 6) {\n      throw new Error('Password must be at least 6 characters');\n    }\n  };\n  const login = async credentials => {\n    try {\n      validateCredentials(credentials);\n      setLoading(true);\n      setError(null);\n      const response = await authService.login({\n        email: credentials.email.trim(),\n        password: credentials.password.trim()\n      });\n      if (response !== null && response !== void 0 && response.token) {\n        localStorage.setItem('token', response.token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${response.token}`;\n        setUser(response.user);\n        return response;\n      } else {\n        throw new Error('Authentication failed - no token received');\n      }\n    } catch (err) {\n      const errorMessage = err.message || 'Login failed';\n      setError(errorMessage);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      // Validate credentials before setting loading state\n      validateCredentials(userData);\n      console.log('Credentials validated');\n      setLoading(true);\n      setError(null);\n      console.log('Calling authService.register with:', {\n        name: userData.name,\n        email: userData.email,\n        role: userData.role\n      });\n      const response = await authService.register(_objectSpread(_objectSpread({}, userData), {}, {\n        email: userData.email.trim(),\n        password: userData.password.trim()\n      }));\n      console.log('AuthService register response:', response);\n      if (response !== null && response !== void 0 && response.user) {\n        console.log('Registration successful');\n        return response;\n      } else {\n        console.error('Invalid response from authService:', response);\n        throw new Error('Registration failed - invalid response from server');\n      }\n    } catch (err) {\n      console.error('Registration error in AuthContext:', err);\n      const errorMessage = err.message || 'Registration failed';\n      setError(errorMessage);\n      throw err; // Throw the original error to preserve the error type\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setError(null);\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n  };\n  const updateProfile = async userData => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await authService.updateProfile(userData);\n      if (response && response.user) {\n        setUser(response.user);\n        return response;\n      }\n      throw new Error('Invalid response from server');\n    } catch (err) {\n      console.error('Profile update error:', err);\n      setError(err.message || 'An unexpected error occurred');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetPassword = async email => {\n    try {\n      setLoading(true);\n      setError(null);\n      if (!(email !== null && email !== void 0 && email.trim())) {\n        throw new Error('Please provide an email address');\n      }\n      const response = await authService.resetPassword(email.trim());\n      return response;\n    } catch (err) {\n      const errorMessage = err.message || 'Failed to send reset instructions';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const verifyResetCode = async (email, code, newPassword) => {\n    try {\n      setLoading(true);\n      setError(null);\n      if (!(email !== null && email !== void 0 && email.trim()) || !(code !== null && code !== void 0 && code.trim()) || !(newPassword !== null && newPassword !== void 0 && newPassword.trim())) {\n        throw new Error('Please provide email, reset code, and new password');\n      }\n      const response = await authService.verifyResetCode(email.trim(), code.trim(), newPassword.trim());\n      return response;\n    } catch (err) {\n      const errorMessage = err.message || 'Failed to reset password';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    initialized,\n    register,\n    login,\n    logout,\n    updateProfile,\n    resetPassword,\n    verifyResetCode\n  };\n  if (loading && !initialized) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    }));\n  }\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }\n  }, children);\n};\n_s(AuthProvider, \"QWZMLRQim+3e9MN4d0OCQQuKmLY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","axios","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","initialized","setInitialized","mounted","initAuth","token","localStorage","getItem","defaults","headers","common","userData","getCurrentUser","removeItem","err","console","validateCredentials","credentials","_credentials$email","_credentials$password","email","trim","Error","password","test","length","login","response","setItem","errorMessage","message","register","log","name","role","_objectSpread","logout","updateProfile","resetPassword","verifyResetCode","code","newPassword","value","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Provider","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/ashut/Documents/GitHub/Smart-Health-Mgmt/Smart-Healthcare-Mgmt/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport authService from '../services/authService';\nimport axios from 'axios';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n\n  useEffect(() => {\n    let mounted = true;\n    const initAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token && mounted) {\n          // Set axios default header\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          try {\n            const userData = await authService.getCurrentUser();\n            if (userData && mounted) {\n              setUser(userData);\n            } else if (mounted) {\n              localStorage.removeItem('token');\n              delete axios.defaults.headers.common['Authorization'];\n            }\n          } catch (err) {\n            console.error('Failed to get current user:', err);\n            if (mounted) {\n              localStorage.removeItem('token');\n              delete axios.defaults.headers.common['Authorization'];\n            }\n          }\n        }\n      } catch (err) {\n        console.error('Auth initialization failed:', err);\n        if (mounted) {\n          localStorage.removeItem('token');\n          delete axios.defaults.headers.common['Authorization'];\n        }\n      } finally {\n        if (mounted) {\n          setLoading(false);\n          setInitialized(true);\n        }\n      }\n    };\n\n    initAuth();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const validateCredentials = (credentials) => {\n    if (!credentials?.email?.trim()) {\n      throw new Error('Email is required');\n    }\n    if (!credentials?.password?.trim()) {\n      throw new Error('Password is required');\n    }\n    if (!/\\S+@\\S+\\.\\S+/.test(credentials.email.trim())) {\n      throw new Error('Please enter a valid email address');\n    }\n    if (credentials.password.length < 6) {\n      throw new Error('Password must be at least 6 characters');\n    }\n  };\n\n  const login = async (credentials) => {\n    try {\n      validateCredentials(credentials);\n      setLoading(true);\n      setError(null);\n      \n      const response = await authService.login({\n        email: credentials.email.trim(),\n        password: credentials.password.trim()\n      });\n      \n      if (response?.token) {\n        localStorage.setItem('token', response.token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${response.token}`;\n        setUser(response.user);\n        return response;\n      } else {\n        throw new Error('Authentication failed - no token received');\n      }\n    } catch (err) {\n      const errorMessage = err.message || 'Login failed';\n      setError(errorMessage);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      // Validate credentials before setting loading state\n      validateCredentials(userData);\n      console.log('Credentials validated');\n\n      setLoading(true);\n      setError(null);\n      \n      console.log('Calling authService.register with:', {\n        name: userData.name,\n        email: userData.email,\n        role: userData.role\n      });\n\n      const response = await authService.register({\n        ...userData,\n        email: userData.email.trim(),\n        password: userData.password.trim()\n      });\n      \n      console.log('AuthService register response:', response);\n\n      if (response?.user) {\n        console.log('Registration successful');\n        return response;\n      } else {\n        console.error('Invalid response from authService:', response);\n        throw new Error('Registration failed - invalid response from server');\n      }\n    } catch (err) {\n      console.error('Registration error in AuthContext:', err);\n      const errorMessage = err.message || 'Registration failed';\n      setError(errorMessage);\n      throw err; // Throw the original error to preserve the error type\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setError(null);\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n  };\n\n  const updateProfile = async (userData) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await authService.updateProfile(userData);\n      if (response && response.user) {\n        setUser(response.user);\n        return response;\n      }\n      throw new Error('Invalid response from server');\n    } catch (err) {\n      console.error('Profile update error:', err);\n      setError(err.message || 'An unexpected error occurred');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetPassword = async (email) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      if (!email?.trim()) {\n        throw new Error('Please provide an email address');\n      }\n\n      const response = await authService.resetPassword(email.trim());\n      return response;\n    } catch (err) {\n      const errorMessage = err.message || 'Failed to send reset instructions';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const verifyResetCode = async (email, code, newPassword) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      if (!email?.trim() || !code?.trim() || !newPassword?.trim()) {\n        throw new Error('Please provide email, reset code, and new password');\n      }\n\n      const response = await authService.verifyResetCode(\n        email.trim(),\n        code.trim(),\n        newPassword.trim()\n      );\n      return response;\n    } catch (err) {\n      const errorMessage = err.message || 'Failed to reset password';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    error,\n    initialized,\n    register,\n    login,\n    logout,\n    updateProfile,\n    resetPassword,\n    verifyResetCode\n  };\n\n  if (loading && !initialized) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}